//////////////////////////////////
///// Transaction-Level Data /////
//////////////////////////////////
  
//   """
//   An event is any user action that occurs in a protocol. Generally, they are Ethereum events
//   emitted by a function in the smart contracts, stored in transaction receipts as event logs.
//   However, some user actions of interest are function calls that don't emit events. For example,
//   the deposit and withdraw functions in Yearn do not emit any events. In our subgraphs, we still
//   store them as events, although they are not technically Ethereum events emitted by smart
//   contracts.
//   """

message Events {
    repeated Event events = 1;
  }
  
message Event {
    oneof type {
      Swap swap = 1;
      Burn burn = 2;
      Mint mint = 3;
    }
    // { Event type }-{ Transaction hash }-{ Log index }
    string id = 100;
  
    // Transaction hash of the transaction that emitted this event
    string hash = 101;
  
    // Event log index. For transactions that don't emit event, create arbitrary index starting from 0
    uint64 logIndex = 102;
  
    // The protocol this transaction belongs to
    Protocol protocol = 103;
  
    // Address that received the tokens
    string to = 104;
  
    // Address that sent the tokens
    string from = 105;
  
    // Block number of this event
    uint64 blockNumber = 106;
  
    // Timestamp of this event
    uint64 timestamp = 107;
}
  
message Deposit {
    // Input tokens of the pool. E.g. WETH and USDC to a WETH-USDC pool
    repeated Token inputTokens = 1;
  
    // Output token of the pool. E.g. the UNI-LP token
    Token outputToken = 2;
  
    // Amount of input tokens in the token's native unit
    repeated string inputTokenAmounts = 3;
  
    // Amount of output tokens in the token's native unit
    string outputTokenAmount = 4;
  
    // USD-normalized value of the transaction of the underlying (e.g. sum of tokens deposited into a pool)
    double amountUSD = 5;
  
    // The pool involving this transaction
    LiquidityPool pool = 6;
}
  
message Withdraw {
    // Input tokens of the pool (not input tokens of the event/transaction). E.g. WETH and USDC from a WETH-USDC pool
    repeated Token inputTokens = 1;
  
    // Output token of the pool (not output token of the event/transaction). E.g. the UNI-LP token
    Token outputToken = 2;
  
    // Amount of input tokens in the token's native unit
    repeated string inputTokenAmounts = 3;
  
    // Amount of output tokens in the token's native unit
    string outputTokenAmount = 4;
  
    // USD-normalized value of the transaction of the underlying (e.g. sum of tokens withdrawn from a pool)
    double amountUSD = 5;
  
    // The pool involving this transaction
    LiquidityPool pool = 6;
}
  
message Swap {
    // swap-{ Transaction hash }-{ Log index }
    string id = 1;
  
    // Transaction hash of the transaction that emitted this event
    string  hash = 2;
  
    // Event log index. For transactions that don't emit event, create arbitrary index starting from 0
    uint64 logIndex = 3;
  
    // The protocol this transaction belongs to
    Protocol protocol = 4;
  
    // Address that received the tokens
    string to = 5;
  
    // Address that sent the tokens
    string from = 6;
  
    // Block number of this event
    uint64 blockNumber = 7;
  
    // Timestamp of this event
    uint64 timestamp = 8;
  
    // Token deposited into pool
    Token tokenIn = 9;

    // Amount of token deposited into pool in native units
    string amountIn = 10;
  
    // Amount of token deposited into pool in USD
    double amountInUSD = 11;
  
    // Token withdrawn from pool
    Token tokenOut = 12;
  
    // Amount of token withdrawn from pool in native units
    string amountOut = 13;
  
    // Amount of token withdrawn from pool in USD
    double amountOutUSD = 14;
  
    // The pool involving this transaction
    LiquidityPool pool = 15;
}
