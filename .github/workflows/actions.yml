name: Actions
on: 
  pull_request: 
    branches:
      - master
    types: [closed]
jobs:
  Deployment:
    name: Pull Reques
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
    - id: files
      uses: jitterbit/get-changed-files@v1
      continue-on-error: true

    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3

    - name: Get Updated Files Indicating Deployment
      run: |
        declare -i deploy_any
        declare -i deploy_all
        declare -A deploy_protocol_all
        declare -A deploy_network
        deploy_any=0
        deploy_all=0
        ip=$( echo "$line" |cut -d\: -f1 )

        for changed_file in ${{ steps.files.outputs.all }}; do
          if [[ ${changed_file} == *"/src/"* ]]; then
            ref_folder=$( echo ${changed_file%/src/*} | rev | cut -d / -f 2| rev);
            if [[ $ref_folder == subgraphs ]]; then
              deploy_all=1;
              deploy_any=1;
            elif [[ $ref_folder == protocols ]]; then
              protocol=$( echo ${changed_file%/src/*} | rev | cut -d / -f 1| rev);
              echo $protocol
              deploy_protocol_all[$protocol]=1;
              echo deploy_protocol_all[$protocol]
              for protocol in "${!deploy_protocol_all[@]}"; do
                echo ${protocol}
              done
              deploy_any=1;
            else 
              echo "Warning: src/ folder should be located at subgraphs/**subgraph**/protocols/src/ or subgraphs/**subgraph**/src/"; 
            fi;
          elif [[ ${changed_file} == *"/config/"* ]]; then
            ref_folder=$( echo ${changed_file%/config/*} | rev | cut -d / -f 2| rev);
            if [[ $ref_folder == protocols ]]; then
              ref_folder2=$( echo ${changed_file*/config/%} | rev | cut -d / -f 1| rev);
              if [[ $ref_folder2 == networks ]]; then
                protocol=$( echo ${changed_file%/config/*} | rev | cut -d / -f 1| rev);
                network=$( echo ${changed_file*/config/%} | rev | cut -d / -f 2| rev);

                protocol_network=$(echo ${protocol}_${network})
                deploy_protocol[${protocol_network}]=1
                deploy_any=1;
              fi;
            else 
              echo "Warning: config/ folder should be located at subgraphs/**subgraph**/protocols/config/";
            fi;
          fi;
        done

        echo ${deploy_any}

        echo "DEPLOY_ANY_ENV=$deploy_any" >> $GITHUB_ENV
        echo "DEPLOY_ALL_ENV=$deploy_all" >> $GITHUB_ENV
        echo "DEPLOY_PROTOCOL_ALL_ENV=$deploy_protocol_all" >> $GITHUB_ENV
        echo "DEPLOY_NETWORK_ENV=$deploy_network" >> $GITHUB_ENV

    - name: Install Dependencies and Authorize
      run: |

        if [[ $DEPLOY_ANY_ENV == 1 ]]; then
          echo "${{ github.head_ref }} Github Action - Deploying subgraphs to Messari"
          npm install -g @graphprotocol/graph-cli
          npm install --dev @graphprotocol/graph-ts
          npm install mustache
          yarn install
          graph auth --product hosted-service 0845de8b9d834db8b16b5c97ba33ec53
          cd subgraphs/uniswap-forks

          if [[ $DEPLOY_ALL_ENV == 1 ]]; then
            npm run deploy;
          else 
            echo "HELLO"
            for protocol in "${!DEPLOY_PROTOCOL_ALL_ENV[@]}"; do
              echo ${protocol}
              if [[ $DEPLOY_PROTOCOL_ALL_ENV[$protocol] == 1 ]]; then
                npm run deploy ${protocol} steegecs;
              fi;
            done

            for protocol_network in "${!DEPLOY_NETWORK_ENV[@]}"; do
              echo ${protocol_network}
              if [[ $DEPLOY_NETWORK_ENV[$protocol_network] == 1 ]]; then
                protocol=$( echo ${protocol_network} | cut -d _ -f 1);
                network=$( echo ${protocol_network} | cut -d _ -f 2);
                if ! [[ $DEPLOY_PROTOCOL_ENV[$protocol] ]]; then
                  npm run deploy ${protocol} ${netowork} steegecs;
                fi;
              fi;
            done
          fi;
        fi;
      # working-directory: subgraphs/uniswap-forks



 